@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$light-theme-primary: mat-palette($mat-blue-gray, 100);
$light-theme-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$light-theme-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$light-theme: mat-light-theme(
  $light-theme-primary,
  $light-theme-accent,
  $light-theme-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($light-theme);

$dark-theme-primary: mat-palette($mat-blue-gray, 900);
$dark-theme-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$dark-theme-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$dark-theme: mat-dark-theme(
  $dark-theme-primary,
  $dark-theme-accent,
  $dark-theme-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
.dark-theme {
  @include angular-material-theme($dark-theme);
}
